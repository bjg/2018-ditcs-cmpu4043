Question: Explain what is meant by the stream abstraction. 
What is the relationship between streams and the observer pattern?  
What are streams useful for modeling and when might you use them in Rich Web development?

A stream is a sequence of data which is not available all at once but rather made available as it is ready. A stream can be thought of (for the purposes of a mental model) as an array of data which becomes available as the data arrives into the app. The stream abstraction is of course just that - an abstraction. The data arrives in and is placed in a buffer for use. However, it is still useful for explaining the concept and is a perfectly acceptable way of visualizing the idea. 

An observer is a design pattern which is associated with a subject. The subject informs the observer of any state changes to which the observer can that take actions such as recalculating or update other elements etc. A stream

Streams are useful for modelling user input or remote data requests i.e. data which will take an unknown amount of time to become available to the application for use.

An occasion when it would be appropriate to use streams would be for remote data requests. If a stream is used for data which will take an indeterminate amount of time to arrive back to the application, a stream would be a perfect way of dealing with time delays. If an asynchronous approach, such as streams, is not used, then the application will have a terrible user experience with unreactive UI elements and a user unsure as to if their input had any effect on the system.
