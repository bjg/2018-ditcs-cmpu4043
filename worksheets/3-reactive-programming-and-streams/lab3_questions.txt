1)
	Explain what is meant by the stream abstraction. What is the relationship between streams and the observer pattern?  What are streams useful for modeling and when might you use them in Rich Web development?

Stream abstraction is a reactive programming approach for modelling large asynchronous data.

Streams implement Observer Patterns where data is realised via a subscribe operation. 

They can be used to replace event handlers. 



2)
	Assume that you are building an interface to an API in your Rich Web App. Describe in detail how you could use the RxJS library to handle asynchronous network responses to API requests. In your opinion, what are the benefits to using a streams library for networking over, say, promises? And what do you think are the downsides?

The RxJS library could be used to handle network responses to an API by creating an observable stream that gets our HTTP request called.

Advantages:
- Able to handle larger sets of data
- Includes error handling functions
- Easy to combine multiple streams into one.

Disadvantages:
- Less control over data
- Complex to implement and understand